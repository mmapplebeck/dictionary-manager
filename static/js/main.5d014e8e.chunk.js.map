{"version":3,"sources":["components/AppHeader.js","components/Page.js","components/Dialog.js","actions.js","components/DeleteDictionaryButton.js","routes.js","components/DictionaryListItem.js","selectors.js","components/AddDictionaryButton.js","models/Dictionary.js","components/DictionaryList.js","models/Errors.js","components/OptionalErrorIcon.js","validateDictionaryItems.js","tableIcons.js","components/Dictionary.js","components/DictionaryOrRedirect.js","components/PageHeading.js","components/DictionaryHeader.js","components/App.js","serviceWorker.js","models/DictionaryItem.js","reducers.js","index.js","configureStore.js"],"names":["useStyles","makeStyles","theme","root","zIndex","drawer","AppHeader","classes","AppBar","position","className","Toolbar","Typography","variant","noWrap","paper","padding","spacing","Page","header","children","Paper","Dialog","open","title","description","content","actions","onClose","useTheme","fullScreen","useMediaQuery","breakpoints","down","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","ADD_DICTIONARY","DELETE_DICTIONARY","ADD_DICTIONARY_ITEM","UPDATE_DICTIONARY_ITEM","DELETE_DICTIONARY_ITEM","connect","dispatch","name","deleteDictionary","type","payload","useState","setOpen","handleClose","Tooltip","aria-label","IconButton","onClick","Button","color","getDictionaryRoute","encodeURIComponent","DictionaryListItem","ListItem","button","component","Link","to","ListItemAvatar","Avatar","ListItemText","primary","ListItemSecondaryAction","getDictionaries","state","get","getDictionaryNames","createSelector","dictionaries","map","d","getDictionaryByUrl","last","__","find","decodeURIComponent","dictionaryNames","addDictionary","setName","error","setError","submitting","setSubmitting","submit","useCallback","trim","validate","contains","isUniqueDictionaryName","useEffect","TextField","required","autoFocus","margin","label","fullWidth","value","onChange","event","target","helperText","Dictionary","Record","items","List","emptyTextDivider","marginTop","emptyText","paddingTop","Grid","container","justify","size","key","Divider","ErrorLevels","warning","Error","severity","this","level","CycleError","ChainError","ForkError","DuplicateError","errorColor","palette","dark","warningColor","isError","item","chip","props","borderColor","icon","OptionalErrorIcon","Chip","validateItem","domains","rangesByDomain","has","range","includes","domain","length","Set","addErrors","reduce","acc","push","thisModule","tableIcons","Add","forwardRef","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","blankFieldError","withRouter","match","dictionary","params","addDictionaryItem","updateDictionaryItem","index","deleteDictionaryItem","itemsAsArrayWithErrors","useMemo","toJS","options","showTitle","paging","search","actionsColumnIndex","components","Container","EditField","shouldShowError","icons","columns","field","editable","render","localization","body","emptyDataSourceMessage","data","onRowAdd","Promise","resolve","reject","onRowUpdate","oldData","indexOf","onRowDelete","PageHeading","heading","breadcrumbs","marginBottom","DictionaryHeader","Breadcrumbs","RouterLink","alignItems","display","toolbar","mixins","main","width","flexGrow","App","basename","CssBaseline","path","Boolean","window","location","hostname","DictionaryItem","dictionaryItems","action","update","delete","filter","createRootReducer","combineReducers","preloadedState","store","Map","createStore","composeWithDevTools","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5d014e8e.chunk.js","sourcesContent":["import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    zIndex: theme.zIndex.drawer + 1\n  }\n}));\n\nfunction AppHeader() {\n  const classes = useStyles();\n\n  return (\n    <AppBar position=\"fixed\" className={classes.root}>\n      <Toolbar>\n        <Typography variant=\"h6\" noWrap>\n          Dictionary Manager\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default AppHeader;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(2)\n  }\n}));\n\nfunction Page({ header, children }) {\n  const classes = useStyles();\n\n  return (\n    <>\n      {header}\n      <Paper className={classes.paper}>{children}</Paper>\n    </>\n  );\n}\n\nPage.propTypes = {\n  header: PropTypes.node.isRequired,\n  children: PropTypes.node.isRequired\n};\n\nexport default Page;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport MuiDialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nfunction Dialog({ open, title, description, content, actions, onClose }) {\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  return (\n    <MuiDialog\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"dialog-title\"\n      aria-describedby=\"dialog-description\"\n      fullScreen={fullScreen}\n    >\n      <DialogTitle id=\"dialog-title\">{title}</DialogTitle>\n      {(content || description) && (\n        <DialogContent id=\"dialog-description\">\n          {description && <DialogContentText>{description}</DialogContentText>}\n          {content}\n        </DialogContent>\n      )}\n      <DialogActions>{actions}</DialogActions>\n    </MuiDialog>\n  );\n}\n\nDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n  actions: PropTypes.node.isRequired,\n  onClose: PropTypes.func.isRequired,\n  description: PropTypes.string,\n  content: PropTypes.node\n};\n\nexport default Dialog;\n","export const ADD_DICTIONARY = \"ADD_DICTIONARY\";\nexport const DELETE_DICTIONARY = \"DELETE_DICTIONARY\";\nexport const ADD_DICTIONARY_ITEM = \"ADD_DICTIONARY_ITEM\";\nexport const UPDATE_DICTIONARY_ITEM = \"UPDATE_DICTIONARY_ITEM\";\nexport const DELETE_DICTIONARY_ITEM = \"DELETE_DICTIONARY_ITEM\";\n\nexport const addDictionary = name => ({\n  type: ADD_DICTIONARY,\n  payload: name\n});\n\nexport const deleteDictionary = name => ({\n  type: DELETE_DICTIONARY,\n  payload: name\n});\n\nexport const addDictionaryItem = (name, domain, range) => ({\n  type: ADD_DICTIONARY_ITEM,\n  payload: {\n    name,\n    domain,\n    range\n  }\n});\n\nexport const updateDictionaryItem = (name, index, domain, range) => ({\n  type: UPDATE_DICTIONARY_ITEM,\n  payload: {\n    name,\n    index,\n    domain,\n    range\n  }\n});\n\nexport const deleteDictionaryItem = (name, index) => ({\n  type: DELETE_DICTIONARY_ITEM,\n  payload: {\n    name,\n    index\n  }\n});\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/DeleteOutline\";\nimport Button from \"@material-ui/core/Button\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { connect } from \"react-redux\";\n\nimport Dialog from \"./Dialog\";\nimport { deleteDictionary } from \"../actions\";\n\nfunction DeleteDictionaryButton({ name, deleteDictionary }) {\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleDelete = () => {\n    deleteDictionary();\n    handleClose();\n  };\n\n  return (\n    <>\n      <Tooltip title=\"Delete\" aria-label=\"delete\">\n        <IconButton onClick={handleClickOpen}>\n          <DeleteIcon />\n        </IconButton>\n      </Tooltip>\n      <Dialog\n        title={`Are you sure you want to delete ${name} dictionary?`}\n        description=\"You will lose all items in this dictionary.\"\n        actions={\n          <>\n            <Button onClick={handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={handleDelete} color=\"primary\">\n              Delete\n            </Button>\n          </>\n        }\n        open={open}\n        onClose={handleClose}\n      />\n    </>\n  );\n}\n\nDeleteDictionaryButton.propTypes = {\n  name: PropTypes.string.isRequired,\n  deleteDictionary: PropTypes.func.isRequired\n};\n\nexport default connect(null, (dispatch, { name }) => ({\n  deleteDictionary: () => dispatch(deleteDictionary(name))\n}))(DeleteDictionaryButton);\n","export const getDictionaryRoute = name => `/${encodeURIComponent(name)}`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport DictionaryIcon from \"@material-ui/icons/Description\";\nimport { Link } from \"react-router-dom\";\n\nimport DeleteDictionaryButton from \"./DeleteDictionaryButton\";\nimport { getDictionaryRoute } from \"../routes\";\n\nfunction DictionaryListItem({ name, deleteDictionary }) {\n  return (\n    <ListItem button component={Link} to={getDictionaryRoute(name)}>\n      <ListItemAvatar>\n        <Avatar>\n          <DictionaryIcon />\n        </Avatar>\n      </ListItemAvatar>\n      <ListItemText primary={name} />\n      <ListItemSecondaryAction>\n        <DeleteDictionaryButton name={name} />\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n}\n\nDictionaryListItem.propTypes = {\n  name: PropTypes.string.isRequired\n};\n\nexport default DictionaryListItem;\n","import { createSelector } from \"reselect\";\n\nexport const getDictionaries = state => state.get(\"dictionaries\");\n\nexport const getDictionaryNames = createSelector(\n  getDictionaries,\n  dictionaries => dictionaries.map(d => d.name)\n);\n\nexport const getLatestDictionary = createSelector(\n  getDictionaries,\n  dictionaries => dictionaries.last() || null\n);\n\nexport const getDictionaryByUrl = createSelector(\n  getDictionaries,\n  (__, name) => name,\n  (dictionaries, name) =>\n    dictionaries.find(d => d.name === decodeURIComponent(name))\n);\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport ImmutablePropTypes from \"react-immutable-proptypes\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddBoxIcon from \"@material-ui/icons/AddBox\";\nimport { connect } from \"react-redux\";\n\nimport Dialog from \"./Dialog\";\nimport { addDictionary } from \"../actions\";\nimport { getDictionaryNames } from \"../selectors\";\n\nfunction AddDictionaryButton({ addDictionary, dictionaryNames }) {\n  const [name, setName] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [submitting, setSubmitting] = useState(false);\n  const [open, setOpen] = useState(false);\n\n  const isUniqueDictionaryName = name => !dictionaryNames.contains(name);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setSubmitting(false);\n    setError(null);\n    setName(\"\");\n  };\n\n  const handleChange = event => {\n    setName(event.target.value);\n  };\n\n  const handleSubmit = () => {\n    setError(validate(name.trim()));\n    setSubmitting(true);\n  };\n\n  const submit = useCallback(() => {\n    addDictionary(name.trim());\n    handleClose();\n  }, [name, addDictionary]);\n\n  const validate = name => {\n    let error = \"\";\n    if (!name) {\n      error = \"Name must not be blank.\";\n    } else if (!isUniqueDictionaryName(name)) {\n      error = \"That name is already taken. Please use a unique name.\";\n    }\n    return error;\n  };\n\n  useEffect(() => {\n    if (!error && submitting) {\n      submit();\n    }\n  }, [error, submit, submitting]);\n\n  return (\n    <>\n      <Tooltip title=\"Add\" aria-label=\"add\">\n        <IconButton onClick={handleClickOpen}>\n          <AddBoxIcon />\n        </IconButton>\n      </Tooltip>\n      <Dialog\n        title=\"Add Dictionary\"\n        description=\"Once you create your new dictionary, you will be able to add items\n        to it.\"\n        content={\n          <TextField\n            required\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Name\"\n            type=\"text\"\n            fullWidth\n            value={name}\n            onChange={handleChange}\n            error={!!error}\n            helperText={error}\n          />\n        }\n        actions={\n          <>\n            <Button onClick={handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={handleSubmit} color=\"primary\">\n              Create\n            </Button>\n          </>\n        }\n        open={open}\n        onClose={handleClose}\n      />\n    </>\n  );\n}\n\nAddDictionaryButton.propTypes = {\n  addDictionary: PropTypes.func.isRequired,\n  dictionaryNames: ImmutablePropTypes.listOf(PropTypes.string).isRequired\n};\n\nexport default connect(\n  state => ({\n    dictionaryNames: getDictionaryNames(state)\n  }),\n  dispatch => ({\n    addDictionary: name => dispatch(addDictionary(name))\n  })\n)(AddDictionaryButton);\n","import { Record, List } from \"immutable\";\n\nexport const Dictionary = Record({\n  name: \"\",\n  items: List()\n});\n\nexport default Dictionary;\n","import React from \"react\";\nimport ImmutablePropTypes from \"react-immutable-proptypes\";\nimport { connect } from \"react-redux\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport DictionaryListItem from \"./DictionaryListItem\";\nimport AddDictionaryButton from \"./AddDictionaryButton\";\nimport Dictionary from \"../models/Dictionary\";\nimport { getDictionaries } from \"../selectors\";\n\nconst useStyles = makeStyles(theme => ({\n  emptyTextDivider: {\n    marginTop: theme.spacing(1)\n  },\n  emptyText: {\n    paddingTop: theme.spacing(2)\n  }\n}));\n\nfunction DictionaryList({ dictionaries }) {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Grid container justify=\"flex-end\">\n        <AddDictionaryButton />\n      </Grid>\n      {dictionaries.size > 0 && (\n        <List>\n          {dictionaries.map(d => (\n            <div key={d.name}>\n              <DictionaryListItem name={d.name} />\n              <Divider />\n            </div>\n          ))}\n        </List>\n      )}\n\n      {!dictionaries.size && (\n        <>\n          <Divider className={classes.emptyTextDivider} />\n          <Grid container justify=\"center\">\n            <Typography variant=\"body2\" className={classes.emptyText}>\n              You have no dictionaries. Add a dictionary to start editing.\n            </Typography>\n          </Grid>\n        </>\n      )}\n    </>\n  );\n}\n\nDictionaryList.propTypes = {\n  dictionaries: ImmutablePropTypes.listOf(Dictionary).isRequired\n};\n\nexport default connect(state => ({\n  dictionaries: getDictionaries(state)\n}))(DictionaryList);\n","export const ErrorLevels = {\n  error: \"error\",\n  warning: \"warning\"\n};\n\nclass Error {\n  constructor(name, severity) {\n    this.name = name;\n    this.level = severity;\n  }\n}\n\nexport class CycleError extends Error {\n  constructor() {\n    super(\"Cycle\", ErrorLevels.error);\n  }\n}\n\nexport class ChainError extends Error {\n  constructor() {\n    super(\"Chain\", ErrorLevels.warning);\n  }\n}\n\nexport class ForkError extends Error {\n  constructor() {\n    super(\"Fork\", ErrorLevels.warning);\n  }\n}\n\nexport class DuplicateError extends Error {\n  constructor() {\n    super(\"Duplicate\", ErrorLevels.warning);\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Chip from \"@material-ui/core/Chip\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { ErrorLevels } from \"../models/Errors\";\n\nconst useStyles = makeStyles(theme => {\n  const errorColor = theme.palette.error.dark;\n  const warningColor = theme.palette.warning.dark;\n  const isError = item =>\n    item && item.error && item.error.level === ErrorLevels.error;\n\n  return {\n    chip: props => ({\n      color: isError(props.item) ? errorColor : warningColor,\n      borderColor: isError(props.item) ? errorColor : warningColor\n    }),\n    icon: props => ({\n      color: isError(props.item) ? errorColor : warningColor\n    })\n  };\n});\n\nfunction OptionalErrorIcon({ item }) {\n  const classes = useStyles({\n    item\n  });\n\n  if (!item || !item.error) {\n    return null;\n  }\n\n  return (\n    <Chip\n      icon={\n        item.error.level === ErrorLevels.error ? (\n          <ErrorIcon className={classes.icon} />\n        ) : (\n          <WarningIcon className={classes.icon} />\n        )\n      }\n      label={item.error.name}\n      variant=\"outlined\"\n      className={classes.chip}\n    />\n  );\n}\n\nOptionalErrorIcon.propTypes = {\n  item: PropTypes.object\n};\n\nexport default OptionalErrorIcon;\n","// Necessary to maintain spy reference in unit tests\n// https://stackoverflow.com/questions/45111198/how-to-mock-functions-in-the-same-module-using-jest\nimport * as thisModule from \"./validateDictionaryItems\";\n\nimport {\n  ErrorLevels,\n  CycleError,\n  ChainError,\n  ForkError,\n  DuplicateError\n} from \"./models/Errors\";\n\nexport const validateItem = (item, domains, rangesByDomain) => {\n  // Check for errors in order of my percieved severity\n  let error = null;\n  // If this item's range is also an existing domain, it must be either a cycle or a chain\n  if (domains.has(item.range)) {\n    // If a domain exists that maps to this item's domain, there is a cycle, otherwise it must be a chain\n    if (rangesByDomain[item.range].includes(item.domain)) {\n      error = new CycleError();\n    } else {\n      error = new ChainError();\n    }\n    // If multiple range values are mapped to this item's domain value, it must be either a fork or a duplicate\n  } else if (rangesByDomain[item.domain].length > 1) {\n    // If all mapped ranges are unique, there is a fork, otherwise there must be a duplicate\n    if (new Set(rangesByDomain[item.domain]).size > 1) {\n      error = new ForkError();\n    } else {\n      error = new DuplicateError();\n    }\n  }\n  return error;\n};\n\nexport const addErrors = items => {\n  // Get a set of all domains\n  const domains = new Set(items.map(item => item.domain));\n  // Group ranges by their domain\n  const rangesByDomain = items.reduce((acc, item) => {\n    if (!acc[item.domain]) {\n      acc[item.domain] = [];\n    }\n    acc[item.domain].push(item.range);\n    return acc;\n  }, {});\n\n  // Augment every item with any errors\n  return items.map(item => ({\n    ...item,\n    error: thisModule.validateItem(item, domains, rangesByDomain)\n  }));\n};\n","import React, { forwardRef } from \"react\";\n\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => (\n    <ChevronRight {...props} ref={ref} />\n  )),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => (\n    <ChevronLeft {...props} ref={ref} />\n  )),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\nexport default tableIcons;\n","import React, { useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport MaterialTable, { MTableEditField } from \"material-table\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\n\nimport OptionalErrorIcon from \"./OptionalErrorIcon\";\nimport { addErrors } from \"../validateDictionaryItems\";\nimport tableIcons from \"../tableIcons\";\nimport DictionaryModel from \"../models/Dictionary\";\nimport { getDictionaryByUrl } from \"../selectors\";\nimport {\n  addDictionaryItem,\n  updateDictionaryItem,\n  deleteDictionaryItem\n} from \"../actions\";\n\nconst blankFieldError = \"Field cannot be blank\";\n\nfunction Dictionary({\n  dictionary,\n  addDictionaryItem,\n  updateDictionaryItem,\n  deleteDictionaryItem\n}) {\n  // Attempting to reduce the expense of converting immutable structures to JS and calculating errors with memoization\n  const itemsAsArrayWithErrors = useMemo(\n    () => addErrors(dictionary.items.toJS()),\n    [dictionary]\n  );\n\n  return (\n    <MaterialTable\n      options={{\n        showTitle: false,\n        paging: false,\n        search: dictionary.items.size > 0,\n        actionsColumnIndex: 2\n      }}\n      components={{\n        Container: props => <div {...props}></div>,\n        EditField: props => {\n          const { value } = props;\n          const shouldShowError = !value;\n          return (\n            <MTableEditField\n              {...props}\n              error={shouldShowError}\n              helperText={shouldShowError && blankFieldError}\n            />\n          );\n        }\n      }}\n      icons={tableIcons}\n      columns={[\n        { title: \"Domain\", field: \"domain\" },\n        { title: \"Range\", field: \"range\" },\n        {\n          field: \"error\",\n          editable: \"never\",\n          render: item => <OptionalErrorIcon item={item} />\n        }\n      ]}\n      localization={{\n        body: {\n          emptyDataSourceMessage:\n            \"You have no dictionary items. Create an item to start populating this dictionary.\"\n        },\n        header: {\n          actions: \"\"\n        }\n      }}\n      data={itemsAsArrayWithErrors}\n      editable={{\n        onRowAdd: ({ domain, range }) =>\n          new Promise((resolve, reject) => {\n            if (!domain || !range) {\n              // Maintain edit mode if there is a blank field\n              reject();\n            } else {\n              addDictionaryItem(dictionary.name, domain, range);\n              resolve();\n            }\n          }),\n        onRowUpdate: ({ domain, range }, oldData) =>\n          new Promise((resolve, reject) => {\n            if (!domain || !range) {\n              // Maintain edit mode if there is a blank field\n              reject();\n            } else {\n              const index = itemsAsArrayWithErrors.indexOf(oldData);\n              updateDictionaryItem(dictionary.name, index, domain, range);\n              resolve();\n            }\n          }),\n        onRowDelete: oldData =>\n          new Promise((resolve, reject) => {\n            const index = itemsAsArrayWithErrors.indexOf(oldData);\n            deleteDictionaryItem(dictionary.name, index);\n            resolve();\n          })\n      }}\n    />\n  );\n}\n\nDictionary.propTypes = {\n  dictionary: PropTypes.instanceOf(DictionaryModel).isRequired,\n  addDictionaryItem: PropTypes.func.isRequired,\n  updateDictionaryItem: PropTypes.func.isRequired,\n  deleteDictionaryItem: PropTypes.func.isRequired\n};\n\nexport default withRouter(\n  connect(\n    (state, { match }) => ({\n      dictionary: getDictionaryByUrl(state, match.params.name)\n    }),\n    dispatch => ({\n      addDictionaryItem: (name, domain, range) =>\n        dispatch(addDictionaryItem(name, domain, range)),\n      updateDictionaryItem: (name, index, domain, range) =>\n        dispatch(updateDictionaryItem(name, index, domain, range)),\n      deleteDictionaryItem: (name, index) =>\n        dispatch(deleteDictionaryItem(name, index))\n    })\n  )(Dictionary)\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { withRouter, Redirect } from \"react-router-dom\";\n\nimport Dictionary from \"./Dictionary\";\nimport DictionaryModel from \"../models/Dictionary\";\nimport { getDictionaryByUrl } from \"../selectors\";\n\nfunction DictionaryOrRedirect({ dictionary }) {\n  if (!dictionary) {\n    return <Redirect to=\"/\" />;\n  }\n  return <Dictionary />;\n}\n\nDictionaryOrRedirect.propTypes = {\n  dictionary: PropTypes.instanceOf(DictionaryModel)\n};\n\nexport default withRouter(\n  connect((state, { match }) => ({\n    dictionary: getDictionaryByUrl(state, match.params.name)\n  }))(DictionaryOrRedirect)\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Typography from \"@material-ui/core/Typography\";\n\nfunction PageHeading({ heading }) {\n  return (\n    <Typography variant=\"h4\" component=\"h1\">\n      {heading}\n    </Typography>\n  );\n}\n\nPageHeading.propTypes = {\n  heading: PropTypes.string.isRequired\n};\n\nexport default PageHeading;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nimport DeleteDictionaryButton from \"./DeleteDictionaryButton\";\nimport PageHeading from \"./PageHeading\";\n\nconst useStyles = makeStyles(theme => ({\n  breadcrumbs: {\n    marginBottom: theme.spacing(1)\n  },\n  header: {\n    marginBottom: theme.spacing(1)\n  }\n}));\n\nfunction DictionaryHeader({ name }) {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Breadcrumbs aria-label=\"breadcrumb\" className={classes.breadcrumbs}>\n        <Link component={RouterLink} color=\"inherit\" to=\"/\">\n          Dictionaries\n        </Link>\n        <Typography color=\"textPrimary\">{name}</Typography>\n      </Breadcrumbs>\n      <Grid\n        container\n        justify=\"space-between\"\n        alignItems=\"center\"\n        className={classes.header}\n      >\n        <PageHeading heading={`${name} Dictionary`} />\n        <DeleteDictionaryButton name={name} />\n      </Grid>\n    </>\n  );\n}\n\nDictionaryHeader.propTypes = {\n  name: PropTypes.string.isRequired\n};\n\nexport default DictionaryHeader;\n","import React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport AppHeader from \"./AppHeader\";\nimport Page from \"./Page\";\nimport DictionaryList from \"./DictionaryList\";\nimport DictionaryOrRedirect from \"./DictionaryOrRedirect\";\nimport DictionaryHeader from \"./DictionaryHeader\";\nimport PageHeading from \"./PageHeading\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  toolbar: theme.mixins.toolbar,\n  main: {\n    width: \"100%\",\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  },\n  header: {\n    marginBottom: theme.spacing(1)\n  }\n}));\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <Router basename=\"/dictionary-manager\">\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppHeader />\n        <main className={classes.main}>\n          <div className={classes.toolbar} />\n          <Switch>\n            <Route\n              path={`/:name`}\n              render={({ match }) => (\n                <Page header={<DictionaryHeader name={match.params.name} />}>\n                  <DictionaryOrRedirect />\n                </Page>\n              )}\n            />\n            <Route>\n              <Page\n                header={\n                  <Grid container className={classes.header}>\n                    <PageHeading heading=\"Dictionaries\" />\n                  </Grid>\n                }\n              >\n                <DictionaryList />\n              </Page>\n            </Route>\n          </Switch>\n        </main>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { Record } from \"immutable\";\n\nexport const DictionaryItem = Record({\n  domain: \"\",\n  range: \"\"\n});\n\nexport default DictionaryItem;\n","import { List } from \"immutable\";\nimport { combineReducers } from \"redux-immutable\";\n\nimport Dictionary from \"./models/Dictionary\";\nimport DictionaryItem from \"./models/DictionaryItem\";\nimport {\n  ADD_DICTIONARY,\n  DELETE_DICTIONARY,\n  ADD_DICTIONARY_ITEM,\n  UPDATE_DICTIONARY_ITEM,\n  DELETE_DICTIONARY_ITEM\n} from \"./actions\";\n\nfunction dictionaryItems(state = List(), action) {\n  switch (action.type) {\n    case ADD_DICTIONARY_ITEM:\n      return state.push(\n        DictionaryItem({\n          domain: action.payload.domain,\n          range: action.payload.range\n        })\n      );\n    case UPDATE_DICTIONARY_ITEM:\n      return state.update(action.payload.index, () =>\n        DictionaryItem({\n          domain: action.payload.domain,\n          range: action.payload.range\n        })\n      );\n    case DELETE_DICTIONARY_ITEM:\n      return state.delete(action.payload.index);\n    default:\n      return state;\n  }\n}\n\nfunction dictionaries(state = List(), action) {\n  switch (action.type) {\n    case ADD_DICTIONARY:\n      return state.push(\n        Dictionary({\n          name: action.payload\n        })\n      );\n    case DELETE_DICTIONARY:\n      return state.filter(d => d.name !== action.payload);\n    case ADD_DICTIONARY_ITEM:\n    case UPDATE_DICTIONARY_ITEM:\n    case DELETE_DICTIONARY_ITEM:\n      return state.map(d =>\n        d.name === action.payload.name\n          ? Dictionary({\n              name: d.name,\n              items: dictionaryItems(d.items, action)\n            })\n          : d\n      );\n    default:\n      return state;\n  }\n}\n\nconst createRootReducer = () =>\n  combineReducers({\n    dictionaries\n  });\n\nexport default createRootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { Map } from \"immutable\";\n\nimport configureStore from \"./configureStore\";\n\nconst store = configureStore(Map());\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createRootReducer from \"./reducers\";\n\nexport default function configureStore(preloadedState) {\n  const store = createStore(\n    createRootReducer(),\n    preloadedState,\n    composeWithDevTools()\n  );\n\n  return store;\n}\n"],"sourceRoot":""}