{"version":3,"sources":["components/AppHeader.js","components/Page.js","components/Dialog.js","actions.js","components/DeleteDictionaryButton.js","routes.js","models/Errors.js","components/ErrorChip.js","selectors.js","components/ErrorSummary.js","components/DictionaryListItem.js","components/AddDictionaryButton.js","models/Dictionary.js","components/DictionaryList.js","tableIcons.js","components/Dictionary.js","components/DictionaryOrRedirect.js","components/PageHeading.js","components/DictionaryHeader.js","components/App.js","serviceWorker.js","models/DictionaryItem.js","validateItems.js","reducers.js","localStorage.js","index.js","configureStore.js"],"names":["useStyles","makeStyles","theme","root","zIndex","drawer","AppHeader","classes","AppBar","position","className","Toolbar","Typography","variant","noWrap","Link","component","RouterLink","color","to","paper","padding","spacing","Page","header","children","Paper","Dialog","open","title","description","content","actions","onClose","useTheme","fullScreen","useMediaQuery","breakpoints","down","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","ADD_DICTIONARY","DELETE_DICTIONARY","ADD_DICTIONARY_ITEM","UPDATE_DICTIONARY_ITEM","DELETE_DICTIONARY_ITEM","VALIDATE_DICTIONARY_ITEMS","connect","dispatch","name","deleteDictionary","type","payload","useState","setOpen","handleClose","Tooltip","aria-label","IconButton","onClick","Button","getDictionaryRoute","encodeURIComponent","ErrorNames","ErrorLevels","error","warning","Error","Record","level","errorColor","palette","dark","warningColor","isErrorLevel","chip","props","borderColor","icon","ErrorChip","label","Chip","getDictionaries","state","get","getDictionaryNames","createSelector","dictionaries","map","d","getDictionaryByName","__","find","decodeURIComponent","getDictionaryItems","dictionary","items","List","getErrorCount","reduce","sum","item","errors","filter","e","size","getWarningCount","handlePlural","base","count","marginLeft","withRouter","errorCount","warningCount","Grid","container","secondaryAction","display","alignItems","delete","DictionaryListItem","showErrorSummary","up","ListItem","button","ListItemAvatar","Avatar","ListItemText","primary","ListItemSecondaryAction","dictionaryNames","addDictionary","setName","setError","submitting","setSubmitting","submit","useCallback","trim","validate","contains","isUniqueDictionaryName","useEffect","TextField","required","autoFocus","margin","fullWidth","value","onChange","event","target","helperText","Dictionary","emptyTextDivider","marginTop","emptyText","paddingTop","justify","key","Divider","tableIcons","Add","forwardRef","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","blankFieldError","RowErrors","length","errorNames","join","warningNames","match","params","addDictionaryItem","domain","range","updateDictionaryItem","index","deleteDictionaryItem","useMemo","toJS","options","showTitle","paging","search","actionsColumnIndex","components","Container","EditField","shouldShowError","icons","columns","field","editable","sorting","render","localization","body","emptyDataSourceMessage","data","onRowAdd","Promise","resolve","reject","onRowUpdate","oldData","indexOf","onRowDelete","PageHeading","heading","breadcrumbs","marginBottom","DictionaryHeader","Breadcrumbs","toolbar","mixins","main","width","flexGrow","App","basename","process","CssBaseline","maxWidth","path","Boolean","window","location","hostname","DictionaryItem","validateItems","rangesByDomain","reduced","update","ranges","push","set","Map","domainsByRange","rangesWhenItemRangeIsDomain","toSet","domainsWhenItemDomainIsRange","has","rangeCounts","countBy","r","thisModule","emptyState","dictionaryItems","action","createRootReducer","combineReducers","preloadedState","persistedState","serializedState","localStorage","getItem","stateAsJson","JSON","parse","i","err","loadState","store","createStore","composeWithDevTools","applyMiddleware","thunk","subscribe","stringify","setItem","saveState","getState","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4c91ed60.chunk.js","sourcesContent":["import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    zIndex: theme.zIndex.drawer + 1\n  }\n}));\n\nfunction AppHeader() {\n  const classes = useStyles();\n\n  return (\n    <AppBar position=\"fixed\" className={classes.root}>\n      <Toolbar>\n        <Typography variant=\"h6\" noWrap>\n          <Link component={RouterLink} color=\"inherit\" to=\"/\">\n            Dictionary Manager\n          </Link>\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default AppHeader;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(2)\n  }\n}));\n\nfunction Page({ header, children }) {\n  const classes = useStyles();\n\n  return (\n    <>\n      {header}\n      <Paper className={classes.paper}>{children}</Paper>\n    </>\n  );\n}\n\nPage.propTypes = {\n  header: PropTypes.node.isRequired,\n  children: PropTypes.node.isRequired\n};\n\nexport default Page;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport MuiDialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nfunction Dialog({ open, title, description, content, actions, onClose }) {\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  return (\n    <MuiDialog\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"dialog-title\"\n      aria-describedby=\"dialog-description\"\n      fullScreen={fullScreen}\n    >\n      <DialogTitle id=\"dialog-title\">{title}</DialogTitle>\n      {(content || description) && (\n        <DialogContent id=\"dialog-description\">\n          {description && <DialogContentText>{description}</DialogContentText>}\n          {content}\n        </DialogContent>\n      )}\n      <DialogActions>{actions}</DialogActions>\n    </MuiDialog>\n  );\n}\n\nDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n  actions: PropTypes.node.isRequired,\n  onClose: PropTypes.func.isRequired,\n  description: PropTypes.string,\n  content: PropTypes.node\n};\n\nexport default Dialog;\n","export const ADD_DICTIONARY = \"ADD_DICTIONARY\";\nexport const DELETE_DICTIONARY = \"DELETE_DICTIONARY\";\nexport const ADD_DICTIONARY_ITEM = \"ADD_DICTIONARY_ITEM\";\nexport const UPDATE_DICTIONARY_ITEM = \"UPDATE_DICTIONARY_ITEM\";\nexport const DELETE_DICTIONARY_ITEM = \"DELETE_DICTIONARY_ITEM\";\nexport const VALIDATE_DICTIONARY_ITEMS = \"VALIDATE_DICTIONARY_ITEMS\";\n\nexport const addDictionary = name => ({\n  type: ADD_DICTIONARY,\n  payload: name\n});\n\nexport const deleteDictionary = name => ({\n  type: DELETE_DICTIONARY,\n  payload: name\n});\n\nexport const addDictionaryItem = (name, domain, range) => dispatch => {\n  dispatch({\n    type: ADD_DICTIONARY_ITEM,\n    payload: {\n      name,\n      domain,\n      range\n    }\n  });\n  dispatch({\n    type: VALIDATE_DICTIONARY_ITEMS,\n    payload: {\n      name\n    }\n  });\n};\n\nexport const updateDictionaryItem = (\n  name,\n  index,\n  domain,\n  range\n) => dispatch => {\n  dispatch({\n    type: UPDATE_DICTIONARY_ITEM,\n    payload: {\n      name,\n      index,\n      domain,\n      range\n    }\n  });\n  dispatch({\n    type: VALIDATE_DICTIONARY_ITEMS,\n    payload: {\n      name\n    }\n  });\n};\n\nexport const deleteDictionaryItem = (name, index) => dispatch => {\n  dispatch({\n    type: DELETE_DICTIONARY_ITEM,\n    payload: {\n      name,\n      index\n    }\n  });\n  dispatch({\n    type: VALIDATE_DICTIONARY_ITEMS,\n    payload: {\n      name\n    }\n  });\n};\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/DeleteOutline\";\nimport Button from \"@material-ui/core/Button\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { connect } from \"react-redux\";\n\nimport Dialog from \"./Dialog\";\nimport { deleteDictionary } from \"../actions\";\n\nfunction DeleteDictionaryButton({ name, deleteDictionary, className }) {\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleDelete = () => {\n    deleteDictionary();\n    handleClose();\n  };\n\n  return (\n    <div className={className}>\n      <Tooltip title=\"Delete\" aria-label=\"delete\">\n        <IconButton onClick={handleClickOpen}>\n          <DeleteIcon />\n        </IconButton>\n      </Tooltip>\n      <Dialog\n        title={`Are you sure you want to delete ${name} dictionary?`}\n        description=\"You will lose all items in this dictionary.\"\n        actions={\n          <>\n            <Button onClick={handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={handleDelete} color=\"primary\">\n              Delete\n            </Button>\n          </>\n        }\n        open={open}\n        onClose={handleClose}\n      />\n    </div>\n  );\n}\n\nDeleteDictionaryButton.propTypes = {\n  name: PropTypes.string.isRequired,\n  deleteDictionary: PropTypes.func.isRequired,\n  className: PropTypes.string\n};\n\nexport default connect(null, (dispatch, { name }) => ({\n  deleteDictionary: () => dispatch(deleteDictionary(name))\n}))(DeleteDictionaryButton);\n","export const getDictionaryRoute = name => `/${encodeURIComponent(name)}`;\n","import { Record } from \"immutable\";\n\nexport const ErrorNames = {\n  cycle: \"Cycle\",\n  chain: \"Chain\",\n  fork: \"Fork\",\n  duplicate: \"Duplicate\"\n};\nexport const ErrorLevels = {\n  error: \"error\",\n  warning: \"warning\"\n};\n\nexport const Error = Record({\n  name: \"\",\n  level: \"\"\n});\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Chip from \"@material-ui/core/Chip\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { ErrorLevels } from \"../models/Errors\";\n\nconst useStyles = makeStyles(theme => {\n  const errorColor = theme.palette.error.dark;\n  const warningColor = theme.palette.warning.dark;\n  const isErrorLevel = level => level === ErrorLevels.error;\n\n  return {\n    chip: props => ({\n      color: isErrorLevel(props.level) ? errorColor : warningColor,\n      borderColor: isErrorLevel(props.level) ? errorColor : warningColor\n    }),\n    icon: props => ({\n      color: isErrorLevel(props.level) ? errorColor : warningColor\n    })\n  };\n});\n\nfunction ErrorChip({ level, label, className }) {\n  const classes = useStyles({\n    level\n  });\n\n  return (\n    <Chip\n      icon={\n        level === ErrorLevels.error ? (\n          <ErrorIcon className={classes.icon} />\n        ) : (\n          <WarningIcon className={classes.icon} />\n        )\n      }\n      label={label}\n      variant=\"outlined\"\n      className={`${className} ${classes.chip}`}\n    />\n  );\n}\n\nErrorChip.propTypes = {\n  level: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  className: PropTypes.string\n};\n\nexport default ErrorChip;\n","import { createSelector } from \"reselect\";\nimport { List } from \"immutable\";\n\nimport { ErrorLevels } from \"./models/Errors\";\n\nexport const getDictionaries = state => state.get(\"dictionaries\");\n\nexport const getDictionaryNames = createSelector(\n  getDictionaries,\n  dictionaries => dictionaries.map(d => d.name)\n);\n\nexport const getDictionaryByName = createSelector(\n  getDictionaries,\n  (__, name) => name,\n  (dictionaries, name) =>\n    dictionaries.find(d => d.name === decodeURIComponent(name))\n);\n\nexport const getDictionaryItems = createSelector(\n  getDictionaryByName,\n  dictionary => (dictionary ? dictionary.items : List())\n);\n\nexport const getErrorCount = createSelector(getDictionaryItems, items =>\n  items.reduce(\n    (sum, item) =>\n      sum +\n      (item.errors\n        ? item.errors.filter(e => e.level === ErrorLevels.error).size\n        : 0),\n    0\n  )\n);\n\nexport const getWarningCount = createSelector(getDictionaryItems, items =>\n  items.reduce(\n    (sum, item) =>\n      sum +\n      (item.errors\n        ? item.errors.filter(e => e.level === ErrorLevels.warning).size\n        : 0),\n    0\n  )\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport ErrorChip from \"./ErrorChip\";\nimport { ErrorLevels } from \"../models/Errors\";\nimport { getErrorCount, getWarningCount } from \"../selectors\";\n\nconst handlePlural = (base, count) => `${base}${count > 1 ? \"s\" : \"\"}`;\n\nconst useStyles = makeStyles(theme => ({\n  warning: {\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nfunction ErrorSummary({ name, errorCount, warningCount }) {\n  const classes = useStyles();\n\n  if (errorCount === 0 && warningCount === 0) {\n    return null;\n  }\n\n  return (\n    <Grid container>\n      {errorCount > 0 && (\n        <ErrorChip\n          level={ErrorLevels.error}\n          label={`${errorCount} ${handlePlural(\"Error\", errorCount)}`}\n        />\n      )}\n      {warningCount > 0 && (\n        <ErrorChip\n          className={errorCount > 0 ? classes.warning : \"\"}\n          level={ErrorLevels.warning}\n          label={`${warningCount} ${handlePlural(\"Warning\", warningCount)}`}\n        />\n      )}\n    </Grid>\n  );\n}\n\nErrorSummary.propTypes = {\n  name: PropTypes.string.isRequired,\n  errorCount: PropTypes.number.isRequired,\n  warningCount: PropTypes.number.isRequired\n};\n\nexport default withRouter(\n  connect((state, { name }) => ({\n    errorCount: getErrorCount(state, name),\n    warningCount: getWarningCount(state, name)\n  }))(ErrorSummary)\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport DictionaryIcon from \"@material-ui/icons/Description\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\n\nimport DeleteDictionaryButton from \"./DeleteDictionaryButton\";\nimport { getDictionaryRoute } from \"../routes\";\nimport ErrorSummary from \"./ErrorSummary\";\n\nconst useStyles = makeStyles(theme => ({\n  secondaryAction: {\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  delete: {\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nfunction DictionaryListItem({ name, deleteDictionary }) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const showErrorSummary = useMediaQuery(theme.breakpoints.up(\"sm\"));\n\n  return (\n    <ListItem button component={Link} to={getDictionaryRoute(name)}>\n      <ListItemAvatar>\n        <Avatar>\n          <DictionaryIcon />\n        </Avatar>\n      </ListItemAvatar>\n      <ListItemText primary={name} />\n      <ListItemSecondaryAction className={classes.secondaryAction}>\n        {showErrorSummary && <ErrorSummary name={name} />}\n        <DeleteDictionaryButton name={name} className={classes.delete} />\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n}\n\nDictionaryListItem.propTypes = {\n  name: PropTypes.string.isRequired\n};\n\nexport default DictionaryListItem;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport ImmutablePropTypes from \"react-immutable-proptypes\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddBoxIcon from \"@material-ui/icons/AddBox\";\nimport { connect } from \"react-redux\";\n\nimport Dialog from \"./Dialog\";\nimport { addDictionary } from \"../actions\";\nimport { getDictionaryNames } from \"../selectors\";\n\nfunction AddDictionaryButton({ addDictionary, dictionaryNames }) {\n  const [name, setName] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [submitting, setSubmitting] = useState(false);\n  const [open, setOpen] = useState(false);\n\n  const isUniqueDictionaryName = name => !dictionaryNames.contains(name);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setSubmitting(false);\n    setError(null);\n    setName(\"\");\n  };\n\n  const handleChange = event => {\n    setName(event.target.value);\n  };\n\n  const handleSubmit = () => {\n    setError(validate(name.trim()));\n    setSubmitting(true);\n  };\n\n  const submit = useCallback(() => {\n    addDictionary(name.trim());\n    handleClose();\n  }, [name, addDictionary]);\n\n  const validate = name => {\n    let error = \"\";\n    if (!name) {\n      error = \"Name must not be blank.\";\n    } else if (!isUniqueDictionaryName(name)) {\n      error = \"That name is already taken. Please use a unique name.\";\n    }\n    return error;\n  };\n\n  useEffect(() => {\n    if (!error && submitting) {\n      submit();\n    }\n  }, [error, submit, submitting]);\n\n  return (\n    <>\n      <Tooltip title=\"Add\" aria-label=\"add\">\n        <IconButton onClick={handleClickOpen}>\n          <AddBoxIcon />\n        </IconButton>\n      </Tooltip>\n      <Dialog\n        title=\"Add Dictionary\"\n        description=\"Once you create your new dictionary, you will be able to add items\n        to it.\"\n        content={\n          <TextField\n            required\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Name\"\n            type=\"text\"\n            fullWidth\n            value={name}\n            onChange={handleChange}\n            error={!!error}\n            helperText={error}\n          />\n        }\n        actions={\n          <>\n            <Button onClick={handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={handleSubmit} color=\"primary\">\n              Create\n            </Button>\n          </>\n        }\n        open={open}\n        onClose={handleClose}\n      />\n    </>\n  );\n}\n\nAddDictionaryButton.propTypes = {\n  addDictionary: PropTypes.func.isRequired,\n  dictionaryNames: ImmutablePropTypes.listOf(PropTypes.string).isRequired\n};\n\nexport default connect(\n  state => ({\n    dictionaryNames: getDictionaryNames(state)\n  }),\n  dispatch => ({\n    addDictionary: name => dispatch(addDictionary(name))\n  })\n)(AddDictionaryButton);\n","import { Record, List } from \"immutable\";\n\nexport const Dictionary = Record({\n  name: \"\",\n  items: List()\n});\n\nexport default Dictionary;\n","import React from \"react\";\nimport ImmutablePropTypes from \"react-immutable-proptypes\";\nimport { connect } from \"react-redux\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport DictionaryListItem from \"./DictionaryListItem\";\nimport AddDictionaryButton from \"./AddDictionaryButton\";\nimport Dictionary from \"../models/Dictionary\";\nimport { getDictionaries } from \"../selectors\";\n\nconst useStyles = makeStyles(theme => ({\n  emptyTextDivider: {\n    marginTop: theme.spacing(1)\n  },\n  emptyText: {\n    paddingTop: theme.spacing(2)\n  }\n}));\n\nfunction DictionaryList({ dictionaries }) {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Grid container justify=\"flex-end\">\n        <AddDictionaryButton />\n      </Grid>\n      {dictionaries.size > 0 && (\n        <List>\n          {dictionaries.map(d => (\n            <div key={d.name}>\n              <DictionaryListItem name={d.name} />\n              <Divider />\n            </div>\n          ))}\n        </List>\n      )}\n\n      {!dictionaries.size && (\n        <>\n          <Divider className={classes.emptyTextDivider} />\n          <Grid container justify=\"center\">\n            <Typography variant=\"body2\" className={classes.emptyText}>\n              You have no dictionaries. Add a dictionary to start editing.\n            </Typography>\n          </Grid>\n        </>\n      )}\n    </>\n  );\n}\n\nDictionaryList.propTypes = {\n  dictionaries: ImmutablePropTypes.listOf(Dictionary).isRequired\n};\n\nexport default connect(state => ({\n  dictionaries: getDictionaries(state)\n}))(DictionaryList);\n","import React, { forwardRef } from \"react\";\n\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => (\n    <ChevronRight {...props} ref={ref} />\n  )),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => (\n    <ChevronLeft {...props} ref={ref} />\n  )),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\nexport default tableIcons;\n","import React, { useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport MaterialTable, { MTableEditField } from \"material-table\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport ErrorSummary from \"./ErrorSummary\";\nimport ErrorChip from \"./ErrorChip\";\nimport tableIcons from \"../tableIcons\";\nimport DictionaryModel from \"../models/Dictionary\";\nimport { getDictionaryByName } from \"../selectors\";\nimport {\n  addDictionaryItem,\n  updateDictionaryItem,\n  deleteDictionaryItem\n} from \"../actions\";\nimport { ErrorLevels } from \"../models/Errors\";\n\nconst blankFieldError = \"Field cannot be blank\";\n\nconst useStyles = makeStyles(theme => ({\n  warning: {\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nfunction RowErrors({ item }) {\n  const classes = useStyles();\n\n  if (!item || !item.errors || item.errors.length === 0) {\n    return null;\n  }\n  const errorNames = item.errors\n    .filter(e => e.level === ErrorLevels.error)\n    .map(e => e.name)\n    .join(\", \");\n  const warningNames = item.errors\n    .filter(e => e.level === ErrorLevels.warning)\n    .map(e => e.name)\n    .join(\", \");\n\n  return (\n    <>\n      {errorNames && <ErrorChip level={ErrorLevels.error} label={errorNames} />}\n      {warningNames && (\n        <ErrorChip\n          level={ErrorLevels.warning}\n          label={warningNames}\n          className={errorNames ? classes.warning : \"\"}\n        />\n      )}\n    </>\n  );\n}\n\nRowErrors.propTypes = {\n  item: PropTypes.object\n};\n\nfunction Dictionary({\n  dictionary,\n  addDictionaryItem,\n  updateDictionaryItem,\n  deleteDictionaryItem\n}) {\n  // Attempting to reduce the expense of converting immutable structures to JS with memoization\n  const items = useMemo(() => dictionary.items.toJS(), [dictionary]);\n\n  return (\n    <>\n      <ErrorSummary name={dictionary.name} />\n      <MaterialTable\n        options={{\n          showTitle: false,\n          paging: false,\n          search: dictionary.items.size > 0,\n          actionsColumnIndex: 2\n        }}\n        components={{\n          Container: props => <div {...props}></div>,\n          EditField: props => {\n            const { value } = props;\n            const shouldShowError = !value;\n            return (\n              <MTableEditField\n                {...props}\n                error={shouldShowError}\n                helperText={shouldShowError && blankFieldError}\n                fullWidth\n              />\n            );\n          }\n        }}\n        icons={tableIcons}\n        columns={[\n          { title: \"Domain\", field: \"domain\" },\n          { title: \"Range\", field: \"range\" },\n          {\n            field: \"error\",\n            editable: \"never\",\n            sorting: false,\n            render: item => <RowErrors item={item} />\n          }\n        ]}\n        localization={{\n          body: {\n            emptyDataSourceMessage:\n              \"You have no dictionary items. Create an item to start populating this dictionary.\"\n          },\n          header: {\n            actions: \"\"\n          }\n        }}\n        data={items}\n        editable={{\n          onRowAdd: ({ domain, range }) =>\n            new Promise((resolve, reject) => {\n              if (!domain || !range) {\n                // Maintain edit mode if there is a blank field\n                reject();\n              } else {\n                addDictionaryItem(dictionary.name, domain, range);\n                resolve();\n              }\n            }),\n          onRowUpdate: ({ domain, range }, oldData) =>\n            new Promise((resolve, reject) => {\n              if (!domain || !range) {\n                // Maintain edit mode if there is a blank field\n                reject();\n              } else {\n                const index = items.indexOf(oldData);\n                updateDictionaryItem(dictionary.name, index, domain, range);\n                resolve();\n              }\n            }),\n          onRowDelete: oldData =>\n            new Promise((resolve, reject) => {\n              const index = items.indexOf(oldData);\n              deleteDictionaryItem(dictionary.name, index);\n              resolve();\n            })\n        }}\n      />\n    </>\n  );\n}\n\nDictionary.propTypes = {\n  dictionary: PropTypes.instanceOf(DictionaryModel).isRequired,\n  addDictionaryItem: PropTypes.func.isRequired,\n  updateDictionaryItem: PropTypes.func.isRequired,\n  deleteDictionaryItem: PropTypes.func.isRequired\n};\n\nexport default withRouter(\n  connect(\n    (state, { match }) => ({\n      dictionary: getDictionaryByName(state, match.params.name)\n    }),\n    dispatch => ({\n      addDictionaryItem: (name, domain, range) =>\n        dispatch(addDictionaryItem(name, domain, range)),\n      updateDictionaryItem: (name, index, domain, range) =>\n        dispatch(updateDictionaryItem(name, index, domain, range)),\n      deleteDictionaryItem: (name, index) =>\n        dispatch(deleteDictionaryItem(name, index))\n    })\n  )(Dictionary)\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { withRouter, Redirect } from \"react-router-dom\";\n\nimport Dictionary from \"./Dictionary\";\nimport DictionaryModel from \"../models/Dictionary\";\nimport { getDictionaryByName } from \"../selectors\";\n\nfunction DictionaryOrRedirect({ dictionary }) {\n  if (!dictionary) {\n    return <Redirect to=\"/\" />;\n  }\n  return <Dictionary />;\n}\n\nDictionaryOrRedirect.propTypes = {\n  dictionary: PropTypes.instanceOf(DictionaryModel)\n};\n\nexport default withRouter(\n  connect((state, { match }) => ({\n    dictionary: getDictionaryByName(state, match.params.name)\n  }))(DictionaryOrRedirect)\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Typography from \"@material-ui/core/Typography\";\n\nfunction PageHeading({ heading }) {\n  return (\n    <Typography variant=\"h4\" component=\"h1\">\n      {heading}\n    </Typography>\n  );\n}\n\nPageHeading.propTypes = {\n  heading: PropTypes.string.isRequired\n};\n\nexport default PageHeading;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nimport DeleteDictionaryButton from \"./DeleteDictionaryButton\";\nimport PageHeading from \"./PageHeading\";\n\nconst useStyles = makeStyles(theme => ({\n  breadcrumbs: {\n    marginBottom: theme.spacing(1)\n  },\n  header: {\n    marginBottom: theme.spacing(1)\n  }\n}));\n\nfunction DictionaryHeader({ name }) {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Breadcrumbs aria-label=\"breadcrumb\" className={classes.breadcrumbs}>\n        <Link component={RouterLink} color=\"inherit\" to=\"/\">\n          Dictionaries\n        </Link>\n        <Typography color=\"textPrimary\">{name}</Typography>\n      </Breadcrumbs>\n      <Grid\n        container\n        justify=\"space-between\"\n        alignItems=\"center\"\n        className={classes.header}\n      >\n        <PageHeading heading={`${name} Dictionary`} />\n        <DeleteDictionaryButton name={name} />\n      </Grid>\n    </>\n  );\n}\n\nDictionaryHeader.propTypes = {\n  name: PropTypes.string.isRequired\n};\n\nexport default DictionaryHeader;\n","import React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport AppHeader from \"./AppHeader\";\nimport Page from \"./Page\";\nimport DictionaryList from \"./DictionaryList\";\nimport DictionaryOrRedirect from \"./DictionaryOrRedirect\";\nimport DictionaryHeader from \"./DictionaryHeader\";\nimport PageHeading from \"./PageHeading\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  toolbar: theme.mixins.toolbar,\n  main: {\n    width: \"100%\",\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  },\n  header: {\n    marginBottom: theme.spacing(1)\n  }\n}));\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppHeader />\n        <main className={classes.main}>\n          <div className={classes.toolbar} />\n          <Container maxWidth=\"lg\">\n            <Switch>\n              <Route\n                path={`/:name`}\n                render={({ match }) => (\n                  <Page header={<DictionaryHeader name={match.params.name} />}>\n                    <DictionaryOrRedirect />\n                  </Page>\n                )}\n              />\n              <Route>\n                <Page\n                  header={\n                    <Grid container className={classes.header}>\n                      <PageHeading heading=\"Dictionaries\" />\n                    </Grid>\n                  }\n                >\n                  <DictionaryList />\n                </Page>\n              </Route>\n            </Switch>\n          </Container>\n        </main>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { Record, List } from \"immutable\";\n\nexport const DictionaryItem = Record({\n  domain: \"\",\n  range: \"\",\n  errors: List()\n});\n\nexport default DictionaryItem;\n","import { List, Map } from \"immutable\";\n\n// Necessary to maintain spy reference in unit tests\n// https://stackoverflow.com/questions/45111198/how-to-mock-functions-in-the-same-module-using-jest\nimport * as thisModule from \"./validateItems\";\nimport { Error, ErrorNames, ErrorLevels } from \"./models/Errors\";\n\nexport const validateItem = (item, rangesByDomain, domainsByRange) => {\n  let errors = [];\n\n  const rangesWhenItemRangeIsDomain = rangesByDomain.get(item.range)\n    ? rangesByDomain.get(item.range).toSet()\n    : null;\n  const domainsWhenItemDomainIsRange = domainsByRange.get(item.domain)\n    ? domainsByRange.get(item.domain).toSet()\n    : null;\n\n  // If when using the item's range as a domain, you find the item's range again, there is a cycle\n  if (\n    rangesWhenItemRangeIsDomain &&\n    rangesWhenItemRangeIsDomain.has(item.domain)\n  ) {\n    errors.push(\n      Error({\n        name: ErrorNames.cycle,\n        level: ErrorLevels.error\n      })\n    );\n  }\n\n  // If when using the item's range as a domain, and you find a value other than the item's domain (which would be a cycle), there is a chain\n  // If when using the item's domain as a range, and you find a value other than the item's range (which would be a cycle), there is a chain\n  if (\n    (rangesWhenItemRangeIsDomain &&\n      (!rangesWhenItemRangeIsDomain.has(item.domain) ||\n        rangesWhenItemRangeIsDomain.size > 1)) ||\n    (domainsWhenItemDomainIsRange &&\n      (!domainsWhenItemDomainIsRange.has(item.range) ||\n        domainsWhenItemDomainIsRange.size > 1))\n  ) {\n    errors.push(\n      Error({\n        name: ErrorNames.chain,\n        level: ErrorLevels.warning\n      })\n    );\n  }\n\n  const rangeCounts = rangesByDomain.get(item.domain).countBy(r => r);\n\n  // If this domain has multiple unique ranges associated, there is a fork\n  if (rangeCounts.size > 1) {\n    errors.push(\n      Error({\n        name: ErrorNames.fork,\n        level: ErrorLevels.warning\n      })\n    );\n  }\n\n  // If this domain has multiple matches for this range, there is a duplicate\n  if (rangeCounts.get(item.range) > 1) {\n    errors.push(\n      Error({\n        name: ErrorNames.duplicate,\n        level: ErrorLevels.warning\n      })\n    );\n  }\n\n  return List(errors);\n};\n\nexport const validateItems = items => {\n  // Group ranges by their domain\n  const rangesByDomain = items.reduce((reduced, item) => {\n    if (!reduced.get(item.domain)) {\n      return reduced.set(item.domain, List([item.range]));\n    }\n    return reduced.update(item.domain, ranges => ranges.push(item.range));\n  }, Map());\n  // Group domains by their range\n  const domainsByRange = items.reduce((reduced, item) => {\n    if (!reduced.get(item.range)) {\n      return reduced.set(item.range, List([item.domain]));\n    }\n    return reduced.update(item.range, ranges => ranges.push(item.domain));\n  }, Map());\n  return items.map(item =>\n    item.update(\"errors\", () =>\n      thisModule.validateItem(item, rangesByDomain, domainsByRange)\n    )\n  );\n};\n","import { List, Map } from \"immutable\";\nimport { combineReducers } from \"redux-immutable\";\n\nimport Dictionary from \"./models/Dictionary\";\nimport DictionaryItem from \"./models/DictionaryItem\";\nimport {\n  ADD_DICTIONARY,\n  DELETE_DICTIONARY,\n  ADD_DICTIONARY_ITEM,\n  UPDATE_DICTIONARY_ITEM,\n  DELETE_DICTIONARY_ITEM,\n  VALIDATE_DICTIONARY_ITEMS\n} from \"./actions\";\nimport { validateItems } from \"./validateItems\";\n\nexport const emptyState = Map({\n  dictionaries: List()\n});\n\nfunction dictionaryItems(state = List(), action) {\n  switch (action.type) {\n    case ADD_DICTIONARY_ITEM:\n      return state.push(\n        DictionaryItem({\n          domain: action.payload.domain,\n          range: action.payload.range\n        })\n      );\n    case UPDATE_DICTIONARY_ITEM:\n      return state.update(action.payload.index, () =>\n        DictionaryItem({\n          domain: action.payload.domain,\n          range: action.payload.range\n        })\n      );\n    case DELETE_DICTIONARY_ITEM:\n      return state.delete(action.payload.index);\n    case VALIDATE_DICTIONARY_ITEMS:\n      return validateItems(state);\n    default:\n      return state;\n  }\n}\n\nfunction dictionaries(state = List(), action) {\n  switch (action.type) {\n    case ADD_DICTIONARY:\n      return state.push(\n        Dictionary({\n          name: action.payload\n        })\n      );\n    case DELETE_DICTIONARY:\n      return state.filter(d => d.name !== action.payload);\n    case ADD_DICTIONARY_ITEM:\n    case UPDATE_DICTIONARY_ITEM:\n    case DELETE_DICTIONARY_ITEM:\n    case VALIDATE_DICTIONARY_ITEMS:\n      return state.map(d =>\n        d.name === action.payload.name\n          ? Dictionary({\n              name: d.name,\n              items: dictionaryItems(d.items, action)\n            })\n          : d\n      );\n    default:\n      return state;\n  }\n}\n\nconst createRootReducer = () =>\n  combineReducers({\n    dictionaries\n  });\n\nexport default createRootReducer;\n","import { Map, List } from \"immutable\";\n\nimport { emptyState } from \"./reducers\";\nimport Dictionary from \"./models/Dictionary\";\nimport DictionaryItem from \"./models/DictionaryItem\";\nimport { Error } from \"./models/Errors\";\n\nconst key = \"dictionaryManager\";\n\nconst transform = stateAsJson =>\n  Map({\n    dictionaries: List(\n      stateAsJson.dictionaries.map(d =>\n        Dictionary({\n          name: d.name,\n          items: List(\n            d.items.map(i =>\n              DictionaryItem({\n                domain: i.domain,\n                range: i.range,\n                errors: List(\n                  i.errors.map(e =>\n                    e\n                      ? Error({\n                          name: e.name,\n                          level: e.level\n                        })\n                      : null\n                  )\n                )\n              })\n            )\n          )\n        })\n      )\n    )\n  });\n\nexport const loadState = () => {\n  try {\n    const serializedState = localStorage.getItem(key);\n    if (serializedState === null) {\n      return emptyState;\n    }\n    return transform(JSON.parse(serializedState));\n  } catch (err) {\n    return emptyState;\n  }\n};\n\nexport const saveState = state => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(key, serializedState);\n  } catch {\n    // ignore write errors\n  }\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\n\nimport { loadState, saveState } from \"./localStorage\";\nimport configureStore from \"./configureStore\";\n\nconst persistedState = loadState();\n\nconst store = configureStore(persistedState);\nstore.subscribe(() => {\n  saveState(store.getState());\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\n\nimport createRootReducer from \"./reducers\";\n\nexport default function configureStore(preloadedState) {\n  const store = createStore(\n    createRootReducer(),\n    preloadedState,\n    composeWithDevTools(applyMiddleware(thunk))\n  );\n\n  return store;\n}\n"],"sourceRoot":""}