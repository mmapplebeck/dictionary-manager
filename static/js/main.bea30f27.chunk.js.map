{"version":3,"sources":["components/AppHeader.js","components/Page.js","components/Dialog.js","actions.js","components/DeleteDictionaryButton.js","routes.js","models/Errors.js","components/ErrorChip.js","selectors.js","components/ErrorSummary.js","components/DictionaryListItem.js","components/AddDictionaryButton.js","models/Dictionary.js","components/DictionaryList.js","tableIcons.js","components/Dictionary.js","components/DictionaryOrRedirect.js","components/PageHeading.js","components/DictionaryHeader.js","components/App.js","serviceWorker.js","models/DictionaryItem.js","validateItems.js","reducers.js","index.js","configureStore.js"],"names":["useStyles","makeStyles","theme","root","zIndex","drawer","AppHeader","classes","AppBar","position","className","Toolbar","Typography","variant","noWrap","paper","padding","spacing","Page","header","children","Paper","Dialog","open","title","description","content","actions","onClose","useTheme","fullScreen","useMediaQuery","breakpoints","down","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","ADD_DICTIONARY","DELETE_DICTIONARY","ADD_DICTIONARY_ITEM","UPDATE_DICTIONARY_ITEM","DELETE_DICTIONARY_ITEM","VALIDATE_DICTIONARY_ITEMS","connect","dispatch","name","deleteDictionary","type","payload","useState","setOpen","handleClose","Tooltip","aria-label","IconButton","onClick","Button","color","getDictionaryRoute","encodeURIComponent","ErrorLevels","error","warning","CycleError","Record","level","ChainError","ForkError","DuplicateError","errorColor","palette","dark","warningColor","isErrorLevel","chip","props","borderColor","icon","ErrorChip","label","Chip","getDictionaries","state","get","getDictionaryNames","createSelector","dictionaries","map","d","getDictionaryByName","last","__","find","decodeURIComponent","getDictionaryItems","dictionary","items","getErrorCount","filter","item","size","getWarningCount","handlePlural","base","count","marginLeft","withRouter","errorCount","warningCount","Grid","container","secondaryAction","display","alignItems","delete","DictionaryListItem","showErrorSummary","up","ListItem","button","component","Link","to","ListItemAvatar","Avatar","ListItemText","primary","ListItemSecondaryAction","dictionaryNames","addDictionary","setName","setError","submitting","setSubmitting","submit","useCallback","trim","validate","contains","isUniqueDictionaryName","useEffect","TextField","required","autoFocus","margin","fullWidth","value","onChange","event","target","helperText","Dictionary","List","emptyTextDivider","marginTop","emptyText","paddingTop","justify","key","Divider","tableIcons","Add","forwardRef","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","blankFieldError","match","params","addDictionaryItem","domain","range","updateDictionaryItem","index","deleteDictionaryItem","useMemo","toJS","options","showTitle","paging","search","actionsColumnIndex","components","Container","EditField","shouldShowError","icons","columns","field","editable","sorting","render","localization","body","emptyDataSourceMessage","data","onRowAdd","Promise","resolve","reject","onRowUpdate","oldData","indexOf","onRowDelete","PageHeading","heading","breadcrumbs","marginBottom","DictionaryHeader","Breadcrumbs","RouterLink","toolbar","mixins","main","width","flexGrow","App","basename","CssBaseline","path","Boolean","window","location","hostname","DictionaryItem","validateItems","domains","toSet","rangesByDomain","reduce","reduced","update","ranges","push","set","Map","thisModule","dictionaryItems","action","createRootReducer","combineReducers","preloadedState","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bea30f27.chunk.js","sourcesContent":["import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    zIndex: theme.zIndex.drawer + 1\n  }\n}));\n\nfunction AppHeader() {\n  const classes = useStyles();\n\n  return (\n    <AppBar position=\"fixed\" className={classes.root}>\n      <Toolbar>\n        <Typography variant=\"h6\" noWrap>\n          Dictionary Manager\n        </Typography>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default AppHeader;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(2)\n  }\n}));\n\nfunction Page({ header, children }) {\n  const classes = useStyles();\n\n  return (\n    <>\n      {header}\n      <Paper className={classes.paper}>{children}</Paper>\n    </>\n  );\n}\n\nPage.propTypes = {\n  header: PropTypes.node.isRequired,\n  children: PropTypes.node.isRequired\n};\n\nexport default Page;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport MuiDialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nfunction Dialog({ open, title, description, content, actions, onClose }) {\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  return (\n    <MuiDialog\n      open={open}\n      onClose={onClose}\n      aria-labelledby=\"dialog-title\"\n      aria-describedby=\"dialog-description\"\n      fullScreen={fullScreen}\n    >\n      <DialogTitle id=\"dialog-title\">{title}</DialogTitle>\n      {(content || description) && (\n        <DialogContent id=\"dialog-description\">\n          {description && <DialogContentText>{description}</DialogContentText>}\n          {content}\n        </DialogContent>\n      )}\n      <DialogActions>{actions}</DialogActions>\n    </MuiDialog>\n  );\n}\n\nDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  title: PropTypes.string.isRequired,\n  actions: PropTypes.node.isRequired,\n  onClose: PropTypes.func.isRequired,\n  description: PropTypes.string,\n  content: PropTypes.node\n};\n\nexport default Dialog;\n","export const ADD_DICTIONARY = \"ADD_DICTIONARY\";\nexport const DELETE_DICTIONARY = \"DELETE_DICTIONARY\";\nexport const ADD_DICTIONARY_ITEM = \"ADD_DICTIONARY_ITEM\";\nexport const UPDATE_DICTIONARY_ITEM = \"UPDATE_DICTIONARY_ITEM\";\nexport const DELETE_DICTIONARY_ITEM = \"DELETE_DICTIONARY_ITEM\";\nexport const VALIDATE_DICTIONARY_ITEMS = \"VALIDATE_DICTIONARY_ITEMS\";\n\nexport const addDictionary = name => ({\n  type: ADD_DICTIONARY,\n  payload: name\n});\n\nexport const deleteDictionary = name => ({\n  type: DELETE_DICTIONARY,\n  payload: name\n});\n\nexport const addDictionaryItem = (name, domain, range) => dispatch => {\n  dispatch({\n    type: ADD_DICTIONARY_ITEM,\n    payload: {\n      name,\n      domain,\n      range\n    }\n  });\n  dispatch({\n    type: VALIDATE_DICTIONARY_ITEMS,\n    payload: {\n      name\n    }\n  });\n};\n\nexport const updateDictionaryItem = (\n  name,\n  index,\n  domain,\n  range\n) => dispatch => {\n  dispatch({\n    type: UPDATE_DICTIONARY_ITEM,\n    payload: {\n      name,\n      index,\n      domain,\n      range\n    }\n  });\n  dispatch({\n    type: VALIDATE_DICTIONARY_ITEMS,\n    payload: {\n      name\n    }\n  });\n};\n\nexport const deleteDictionaryItem = (name, index) => dispatch => {\n  dispatch({\n    type: DELETE_DICTIONARY_ITEM,\n    payload: {\n      name,\n      index\n    }\n  });\n  dispatch({\n    type: VALIDATE_DICTIONARY_ITEMS,\n    payload: {\n      name\n    }\n  });\n};\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/DeleteOutline\";\nimport Button from \"@material-ui/core/Button\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { connect } from \"react-redux\";\n\nimport Dialog from \"./Dialog\";\nimport { deleteDictionary } from \"../actions\";\n\nfunction DeleteDictionaryButton({ name, deleteDictionary, className }) {\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleDelete = () => {\n    deleteDictionary();\n    handleClose();\n  };\n\n  return (\n    <div className={className}>\n      <Tooltip title=\"Delete\" aria-label=\"delete\">\n        <IconButton onClick={handleClickOpen}>\n          <DeleteIcon />\n        </IconButton>\n      </Tooltip>\n      <Dialog\n        title={`Are you sure you want to delete ${name} dictionary?`}\n        description=\"You will lose all items in this dictionary.\"\n        actions={\n          <>\n            <Button onClick={handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={handleDelete} color=\"primary\">\n              Delete\n            </Button>\n          </>\n        }\n        open={open}\n        onClose={handleClose}\n      />\n    </div>\n  );\n}\n\nDeleteDictionaryButton.propTypes = {\n  name: PropTypes.string.isRequired,\n  deleteDictionary: PropTypes.func.isRequired,\n  className: PropTypes.string\n};\n\nexport default connect(null, (dispatch, { name }) => ({\n  deleteDictionary: () => dispatch(deleteDictionary(name))\n}))(DeleteDictionaryButton);\n","export const getDictionaryRoute = name => `/${encodeURIComponent(name)}`;\n","import { Record } from \"immutable\";\n\nexport const ErrorLevels = {\n  error: \"error\",\n  warning: \"warning\"\n};\n\nexport const CycleError = Record({\n  name: \"Cycle\",\n  level: ErrorLevels.error\n});\n\nexport const ChainError = Record({\n  name: \"Chain\",\n  level: ErrorLevels.warning\n});\n\nexport const ForkError = Record({\n  name: \"Fork\",\n  level: ErrorLevels.warning\n});\n\nexport const DuplicateError = Record({\n  name: \"Duplicate\",\n  level: ErrorLevels.warning\n});\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Chip from \"@material-ui/core/Chip\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { ErrorLevels } from \"../models/Errors\";\n\nconst useStyles = makeStyles(theme => {\n  const errorColor = theme.palette.error.dark;\n  const warningColor = theme.palette.warning.dark;\n  const isErrorLevel = level => level === ErrorLevels.error;\n\n  return {\n    chip: props => ({\n      color: isErrorLevel(props.level) ? errorColor : warningColor,\n      borderColor: isErrorLevel(props.level) ? errorColor : warningColor\n    }),\n    icon: props => ({\n      color: isErrorLevel(props.level) ? errorColor : warningColor\n    })\n  };\n});\n\nfunction ErrorChip({ level, label, className }) {\n  const classes = useStyles({\n    level\n  });\n\n  return (\n    <Chip\n      icon={\n        level === ErrorLevels.error ? (\n          <ErrorIcon className={classes.icon} />\n        ) : (\n          <WarningIcon className={classes.icon} />\n        )\n      }\n      label={label}\n      variant=\"outlined\"\n      className={`${className} ${classes.chip}`}\n    />\n  );\n}\n\nErrorChip.propTypes = {\n  level: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  className: PropTypes.string\n};\n\nexport default ErrorChip;\n","import { createSelector } from \"reselect\";\nimport { ErrorLevels } from \"./models/Errors\";\n\nexport const getDictionaries = state => state.get(\"dictionaries\");\n\nexport const getDictionaryNames = createSelector(\n  getDictionaries,\n  dictionaries => dictionaries.map(d => d.name)\n);\n\nexport const getLatestDictionary = createSelector(\n  getDictionaries,\n  dictionaries => dictionaries.last() || null\n);\n\nexport const getDictionaryByName = createSelector(\n  getDictionaries,\n  (__, name) => name,\n  (dictionaries, name) =>\n    dictionaries.find(d => d.name === decodeURIComponent(name))\n);\n\nexport const getDictionaryItems = createSelector(\n  getDictionaryByName,\n  dictionary => dictionary.items\n);\n\nexport const getErrorCount = createSelector(\n  getDictionaryItems,\n  items =>\n    items.filter(item => item.error && item.error.level === ErrorLevels.error)\n      .size\n);\n\nexport const getWarningCount = createSelector(\n  getDictionaryItems,\n  items =>\n    items.filter(item => item.error && item.error.level === ErrorLevels.warning)\n      .size\n);\n","import React, { useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport ErrorChip from \"./ErrorChip\";\nimport { ErrorLevels } from \"../models/Errors\";\nimport { getErrorCount, getWarningCount } from \"../selectors\";\n\nconst handlePlural = (base, count) => `${base}${count > 1 ? \"s\" : \"\"}`;\n\nconst useStyles = makeStyles(theme => ({\n  warning: {\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nfunction ErrorSummary({ name, errorCount, warningCount }) {\n  const classes = useStyles();\n\n  if (errorCount === 0 && warningCount === 0) {\n    return null;\n  }\n\n  return (\n    <Grid container>\n      {errorCount > 0 && (\n        <ErrorChip\n          level={ErrorLevels.error}\n          label={`${errorCount} ${handlePlural(\"Error\", errorCount)}`}\n        />\n      )}\n      {warningCount > 0 && (\n        <ErrorChip\n          className={errorCount > 0 ? classes.warning : \"\"}\n          level={ErrorLevels.warning}\n          label={`${warningCount} ${handlePlural(\"Warning\", warningCount)}`}\n        />\n      )}\n    </Grid>\n  );\n}\n\nErrorSummary.propTypes = {\n  name: PropTypes.string.isRequired,\n  errorCount: PropTypes.number.isRequired,\n  warningCount: PropTypes.number.isRequired\n};\n\nexport default withRouter(\n  connect((state, { name }) => ({\n    errorCount: getErrorCount(state, name),\n    warningCount: getWarningCount(state, name)\n  }))(ErrorSummary)\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport DictionaryIcon from \"@material-ui/icons/Description\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\n\nimport DeleteDictionaryButton from \"./DeleteDictionaryButton\";\nimport { getDictionaryRoute } from \"../routes\";\nimport ErrorSummary from \"./ErrorSummary\";\n\nconst useStyles = makeStyles(theme => ({\n  secondaryAction: {\n    display: \"flex\",\n    alignItems: \"center\"\n  },\n  delete: {\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nfunction DictionaryListItem({ name, deleteDictionary }) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const showErrorSummary = useMediaQuery(theme.breakpoints.up(\"sm\"));\n\n  return (\n    <ListItem button component={Link} to={getDictionaryRoute(name)}>\n      <ListItemAvatar>\n        <Avatar>\n          <DictionaryIcon />\n        </Avatar>\n      </ListItemAvatar>\n      <ListItemText primary={name} />\n      <ListItemSecondaryAction className={classes.secondaryAction}>\n        {showErrorSummary && <ErrorSummary name={name} />}\n        <DeleteDictionaryButton name={name} className={classes.delete} />\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n}\n\nDictionaryListItem.propTypes = {\n  name: PropTypes.string.isRequired\n};\n\nexport default DictionaryListItem;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport ImmutablePropTypes from \"react-immutable-proptypes\";\nimport PropTypes from \"prop-types\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport AddBoxIcon from \"@material-ui/icons/AddBox\";\nimport { connect } from \"react-redux\";\n\nimport Dialog from \"./Dialog\";\nimport { addDictionary } from \"../actions\";\nimport { getDictionaryNames } from \"../selectors\";\n\nfunction AddDictionaryButton({ addDictionary, dictionaryNames }) {\n  const [name, setName] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [submitting, setSubmitting] = useState(false);\n  const [open, setOpen] = useState(false);\n\n  const isUniqueDictionaryName = name => !dictionaryNames.contains(name);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setSubmitting(false);\n    setError(null);\n    setName(\"\");\n  };\n\n  const handleChange = event => {\n    setName(event.target.value);\n  };\n\n  const handleSubmit = () => {\n    setError(validate(name.trim()));\n    setSubmitting(true);\n  };\n\n  const submit = useCallback(() => {\n    addDictionary(name.trim());\n    handleClose();\n  }, [name, addDictionary]);\n\n  const validate = name => {\n    let error = \"\";\n    if (!name) {\n      error = \"Name must not be blank.\";\n    } else if (!isUniqueDictionaryName(name)) {\n      error = \"That name is already taken. Please use a unique name.\";\n    }\n    return error;\n  };\n\n  useEffect(() => {\n    if (!error && submitting) {\n      submit();\n    }\n  }, [error, submit, submitting]);\n\n  return (\n    <>\n      <Tooltip title=\"Add\" aria-label=\"add\">\n        <IconButton onClick={handleClickOpen}>\n          <AddBoxIcon />\n        </IconButton>\n      </Tooltip>\n      <Dialog\n        title=\"Add Dictionary\"\n        description=\"Once you create your new dictionary, you will be able to add items\n        to it.\"\n        content={\n          <TextField\n            required\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Name\"\n            type=\"text\"\n            fullWidth\n            value={name}\n            onChange={handleChange}\n            error={!!error}\n            helperText={error}\n          />\n        }\n        actions={\n          <>\n            <Button onClick={handleClose} color=\"primary\">\n              Cancel\n            </Button>\n            <Button onClick={handleSubmit} color=\"primary\">\n              Create\n            </Button>\n          </>\n        }\n        open={open}\n        onClose={handleClose}\n      />\n    </>\n  );\n}\n\nAddDictionaryButton.propTypes = {\n  addDictionary: PropTypes.func.isRequired,\n  dictionaryNames: ImmutablePropTypes.listOf(PropTypes.string).isRequired\n};\n\nexport default connect(\n  state => ({\n    dictionaryNames: getDictionaryNames(state)\n  }),\n  dispatch => ({\n    addDictionary: name => dispatch(addDictionary(name))\n  })\n)(AddDictionaryButton);\n","import { Record, List } from \"immutable\";\n\nexport const Dictionary = Record({\n  name: \"\",\n  items: List()\n});\n\nexport default Dictionary;\n","import React from \"react\";\nimport ImmutablePropTypes from \"react-immutable-proptypes\";\nimport { connect } from \"react-redux\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport List from \"@material-ui/core/List\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport DictionaryListItem from \"./DictionaryListItem\";\nimport AddDictionaryButton from \"./AddDictionaryButton\";\nimport Dictionary from \"../models/Dictionary\";\nimport { getDictionaries } from \"../selectors\";\n\nconst useStyles = makeStyles(theme => ({\n  emptyTextDivider: {\n    marginTop: theme.spacing(1)\n  },\n  emptyText: {\n    paddingTop: theme.spacing(2)\n  }\n}));\n\nfunction DictionaryList({ dictionaries }) {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Grid container justify=\"flex-end\">\n        <AddDictionaryButton />\n      </Grid>\n      {dictionaries.size > 0 && (\n        <List>\n          {dictionaries.map(d => (\n            <div key={d.name}>\n              <DictionaryListItem name={d.name} />\n              <Divider />\n            </div>\n          ))}\n        </List>\n      )}\n\n      {!dictionaries.size && (\n        <>\n          <Divider className={classes.emptyTextDivider} />\n          <Grid container justify=\"center\">\n            <Typography variant=\"body2\" className={classes.emptyText}>\n              You have no dictionaries. Add a dictionary to start editing.\n            </Typography>\n          </Grid>\n        </>\n      )}\n    </>\n  );\n}\n\nDictionaryList.propTypes = {\n  dictionaries: ImmutablePropTypes.listOf(Dictionary).isRequired\n};\n\nexport default connect(state => ({\n  dictionaries: getDictionaries(state)\n}))(DictionaryList);\n","import React, { forwardRef } from \"react\";\n\nimport AddBox from \"@material-ui/icons/AddBox\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport Check from \"@material-ui/icons/Check\";\nimport ChevronLeft from \"@material-ui/icons/ChevronLeft\";\nimport ChevronRight from \"@material-ui/icons/ChevronRight\";\nimport Clear from \"@material-ui/icons/Clear\";\nimport DeleteOutline from \"@material-ui/icons/DeleteOutline\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport FilterList from \"@material-ui/icons/FilterList\";\nimport FirstPage from \"@material-ui/icons/FirstPage\";\nimport LastPage from \"@material-ui/icons/LastPage\";\nimport Remove from \"@material-ui/icons/Remove\";\nimport SaveAlt from \"@material-ui/icons/SaveAlt\";\nimport Search from \"@material-ui/icons/Search\";\nimport ViewColumn from \"@material-ui/icons/ViewColumn\";\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => (\n    <ChevronRight {...props} ref={ref} />\n  )),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => (\n    <ChevronLeft {...props} ref={ref} />\n  )),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\nexport default tableIcons;\n","import React, { useMemo } from \"react\";\nimport PropTypes from \"prop-types\";\nimport MaterialTable, { MTableEditField } from \"material-table\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\n\nimport ErrorSummary from \"./ErrorSummary\";\nimport ErrorChip from \"./ErrorChip\";\nimport tableIcons from \"../tableIcons\";\nimport DictionaryModel from \"../models/Dictionary\";\nimport {\n  getDictionaryByName,\n  getErrorCount,\n  getWarningCount\n} from \"../selectors\";\nimport {\n  addDictionaryItem,\n  updateDictionaryItem,\n  deleteDictionaryItem\n} from \"../actions\";\n\nconst blankFieldError = \"Field cannot be blank\";\n\nfunction Dictionary({\n  dictionary,\n  addDictionaryItem,\n  updateDictionaryItem,\n  deleteDictionaryItem\n}) {\n  // Attempting to reduce the expense of converting immutable structures to JS with memoization\n  const items = useMemo(() => dictionary.items.toJS(), [dictionary]);\n\n  return (\n    <>\n      <ErrorSummary name={dictionary.name} />\n      <MaterialTable\n        options={{\n          showTitle: false,\n          paging: false,\n          search: dictionary.items.size > 0,\n          actionsColumnIndex: 2\n        }}\n        components={{\n          Container: props => <div {...props}></div>,\n          EditField: props => {\n            const { value } = props;\n            const shouldShowError = !value;\n            return (\n              <MTableEditField\n                {...props}\n                error={shouldShowError}\n                helperText={shouldShowError && blankFieldError}\n              />\n            );\n          }\n        }}\n        icons={tableIcons}\n        columns={[\n          { title: \"Domain\", field: \"domain\" },\n          { title: \"Range\", field: \"range\" },\n          {\n            field: \"error\",\n            editable: \"never\",\n            sorting: false,\n            render: item =>\n              item && item.error ? (\n                <ErrorChip level={item.error.level} label={item.error.name} />\n              ) : null\n          }\n        ]}\n        localization={{\n          body: {\n            emptyDataSourceMessage:\n              \"You have no dictionary items. Create an item to start populating this dictionary.\"\n          },\n          header: {\n            actions: \"\"\n          }\n        }}\n        data={items}\n        editable={{\n          onRowAdd: ({ domain, range }) =>\n            new Promise((resolve, reject) => {\n              if (!domain || !range) {\n                // Maintain edit mode if there is a blank field\n                reject();\n              } else {\n                addDictionaryItem(dictionary.name, domain, range);\n                resolve();\n              }\n            }),\n          onRowUpdate: ({ domain, range }, oldData) =>\n            new Promise((resolve, reject) => {\n              if (!domain || !range) {\n                // Maintain edit mode if there is a blank field\n                reject();\n              } else {\n                const index = items.indexOf(oldData);\n                updateDictionaryItem(dictionary.name, index, domain, range);\n                resolve();\n              }\n            }),\n          onRowDelete: oldData =>\n            new Promise((resolve, reject) => {\n              const index = items.indexOf(oldData);\n              deleteDictionaryItem(dictionary.name, index);\n              resolve();\n            })\n        }}\n      />\n    </>\n  );\n}\n\nDictionary.propTypes = {\n  dictionary: PropTypes.instanceOf(DictionaryModel).isRequired,\n  addDictionaryItem: PropTypes.func.isRequired,\n  updateDictionaryItem: PropTypes.func.isRequired,\n  deleteDictionaryItem: PropTypes.func.isRequired\n};\n\nexport default withRouter(\n  connect(\n    (state, { match }) => ({\n      dictionary: getDictionaryByName(state, match.params.name)\n    }),\n    dispatch => ({\n      addDictionaryItem: (name, domain, range) =>\n        dispatch(addDictionaryItem(name, domain, range)),\n      updateDictionaryItem: (name, index, domain, range) =>\n        dispatch(updateDictionaryItem(name, index, domain, range)),\n      deleteDictionaryItem: (name, index) =>\n        dispatch(deleteDictionaryItem(name, index))\n    })\n  )(Dictionary)\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { withRouter, Redirect } from \"react-router-dom\";\n\nimport Dictionary from \"./Dictionary\";\nimport DictionaryModel from \"../models/Dictionary\";\nimport { getDictionaryByName } from \"../selectors\";\n\nfunction DictionaryOrRedirect({ dictionary }) {\n  if (!dictionary) {\n    return <Redirect to=\"/\" />;\n  }\n  return <Dictionary />;\n}\n\nDictionaryOrRedirect.propTypes = {\n  dictionary: PropTypes.instanceOf(DictionaryModel)\n};\n\nexport default withRouter(\n  connect((state, { match }) => ({\n    dictionary: getDictionaryByName(state, match.params.name)\n  }))(DictionaryOrRedirect)\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Typography from \"@material-ui/core/Typography\";\n\nfunction PageHeading({ heading }) {\n  return (\n    <Typography variant=\"h4\" component=\"h1\">\n      {heading}\n    </Typography>\n  );\n}\n\nPageHeading.propTypes = {\n  heading: PropTypes.string.isRequired\n};\n\nexport default PageHeading;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\nimport Link from \"@material-ui/core/Link\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Link as RouterLink } from \"react-router-dom\";\n\nimport DeleteDictionaryButton from \"./DeleteDictionaryButton\";\nimport PageHeading from \"./PageHeading\";\n\nconst useStyles = makeStyles(theme => ({\n  breadcrumbs: {\n    marginBottom: theme.spacing(1)\n  },\n  header: {\n    marginBottom: theme.spacing(1)\n  }\n}));\n\nfunction DictionaryHeader({ name }) {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Breadcrumbs aria-label=\"breadcrumb\" className={classes.breadcrumbs}>\n        <Link component={RouterLink} color=\"inherit\" to=\"/\">\n          Dictionaries\n        </Link>\n        <Typography color=\"textPrimary\">{name}</Typography>\n      </Breadcrumbs>\n      <Grid\n        container\n        justify=\"space-between\"\n        alignItems=\"center\"\n        className={classes.header}\n      >\n        <PageHeading heading={`${name} Dictionary`} />\n        <DeleteDictionaryButton name={name} />\n      </Grid>\n    </>\n  );\n}\n\nDictionaryHeader.propTypes = {\n  name: PropTypes.string.isRequired\n};\n\nexport default DictionaryHeader;\n","import React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport AppHeader from \"./AppHeader\";\nimport Page from \"./Page\";\nimport DictionaryList from \"./DictionaryList\";\nimport DictionaryOrRedirect from \"./DictionaryOrRedirect\";\nimport DictionaryHeader from \"./DictionaryHeader\";\nimport PageHeading from \"./PageHeading\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  toolbar: theme.mixins.toolbar,\n  main: {\n    width: \"100%\",\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  },\n  header: {\n    marginBottom: theme.spacing(1)\n  }\n}));\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <Router basename=\"/dictionary-manager\">\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppHeader />\n        <main className={classes.main}>\n          <div className={classes.toolbar} />\n          <Switch>\n            <Route\n              path={`/:name`}\n              render={({ match }) => (\n                <Page header={<DictionaryHeader name={match.params.name} />}>\n                  <DictionaryOrRedirect />\n                </Page>\n              )}\n            />\n            <Route>\n              <Page\n                header={\n                  <Grid container className={classes.header}>\n                    <PageHeading heading=\"Dictionaries\" />\n                  </Grid>\n                }\n              >\n                <DictionaryList />\n              </Page>\n            </Route>\n          </Switch>\n        </main>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { Record } from \"immutable\";\n\nexport const DictionaryItem = Record({\n  domain: \"\",\n  range: \"\",\n  error: null\n});\n\nexport default DictionaryItem;\n","import { List, Map } from \"immutable\";\n\n// Necessary to maintain spy reference in unit tests\n// https://stackoverflow.com/questions/45111198/how-to-mock-functions-in-the-same-module-using-jest\nimport * as thisModule from \"./validateItems\";\nimport {\n  CycleError,\n  ChainError,\n  ForkError,\n  DuplicateError\n} from \"./models/Errors\";\n\nexport const validateItem = (item, domains, rangesByDomain) => {\n  // Check for errors in order of my percieved severity\n  let error = null;\n  // If this item's range is also an existing domain, it must be either a cycle or a chain\n  if (domains.get(item.range)) {\n    // If a domain exists that maps to this item's domain, there is a cycle, otherwise it must be a chain\n    if (rangesByDomain.get(item.range).contains(item.domain)) {\n      error = CycleError();\n    } else {\n      error = ChainError();\n    }\n    // If multiple range values are mapped to this item's domain value, it must be either a fork or a duplicate\n  } else if (rangesByDomain.get(item.domain).size > 1) {\n    // If all mapped ranges are unique, there is a fork, otherwise there must be a duplicate\n    if (rangesByDomain.get(item.domain).toSet().size > 1) {\n      error = ForkError();\n    } else {\n      error = DuplicateError();\n    }\n  }\n  return error;\n};\n\nexport const validateItems = items => {\n  // Get a set of all domains\n  const domains = items.map(item => item.domain).toSet();\n  // Group ranges by their domain\n  const rangesByDomain = items.reduce((reduced, item) => {\n    if (!reduced.get(item.domain)) {\n      return reduced.set(item.domain, List([item.range]));\n    }\n    return reduced.update(item.domain, ranges => ranges.push(item.range));\n  }, Map());\n  // Augment every item with any errors\n  return items.map(item =>\n    item.update(\"error\", () =>\n      thisModule.validateItem(item, domains, rangesByDomain)\n    )\n  );\n};\n","import { List } from \"immutable\";\nimport { combineReducers } from \"redux-immutable\";\n\nimport Dictionary from \"./models/Dictionary\";\nimport DictionaryItem from \"./models/DictionaryItem\";\nimport {\n  ADD_DICTIONARY,\n  DELETE_DICTIONARY,\n  ADD_DICTIONARY_ITEM,\n  UPDATE_DICTIONARY_ITEM,\n  DELETE_DICTIONARY_ITEM,\n  VALIDATE_DICTIONARY_ITEMS\n} from \"./actions\";\nimport { validateItems } from \"./validateItems\";\n\nfunction dictionaryItems(state = List(), action, dictionaries) {\n  switch (action.type) {\n    case ADD_DICTIONARY_ITEM:\n      return state.push(\n        DictionaryItem({\n          domain: action.payload.domain,\n          range: action.payload.range\n        })\n      );\n    case UPDATE_DICTIONARY_ITEM:\n      return state.update(action.payload.index, () =>\n        DictionaryItem({\n          domain: action.payload.domain,\n          range: action.payload.range\n        })\n      );\n    case DELETE_DICTIONARY_ITEM:\n      return state.delete(action.payload.index);\n    case VALIDATE_DICTIONARY_ITEMS:\n      return validateItems(state);\n    default:\n      return state;\n  }\n}\n\nfunction dictionaries(state = List(), action) {\n  switch (action.type) {\n    case ADD_DICTIONARY:\n      return state.push(\n        Dictionary({\n          name: action.payload\n        })\n      );\n    case DELETE_DICTIONARY:\n      return state.filter(d => d.name !== action.payload);\n    case ADD_DICTIONARY_ITEM:\n    case UPDATE_DICTIONARY_ITEM:\n    case DELETE_DICTIONARY_ITEM:\n    case VALIDATE_DICTIONARY_ITEMS:\n      return state.map(d =>\n        d.name === action.payload.name\n          ? Dictionary({\n              name: d.name,\n              items: dictionaryItems(d.items, action)\n            })\n          : d\n      );\n    default:\n      return state;\n  }\n}\n\nconst createRootReducer = () =>\n  combineReducers({\n    dictionaries\n  });\n\nexport default createRootReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { Map } from \"immutable\";\n\nimport configureStore from \"./configureStore\";\n\nconst store = configureStore(Map());\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\n\nimport createRootReducer from \"./reducers\";\n\nexport default function configureStore(preloadedState) {\n  const store = createStore(\n    createRootReducer(),\n    preloadedState,\n    composeWithDevTools(applyMiddleware(thunk))\n  );\n\n  return store;\n}\n"],"sourceRoot":""}